# FOSSology Makefile configuration
# Copyright (C) 2008 Hewlett-Packard Development Company, L.P.
# 
# This file contains the default values for variables used in the
# Makefiles and other locations in the source tree.
# If you want different values, you can override them on
# the make command line. For example
#    'make VERSION=0.8.0.beta3 all'
# changing them here is probably a bad idea, try to use the above

#####################################################################
# Project info
#####################################################################
# the name of our project
ifndef PROJECT
PROJECT=fossology
endif

# the version of our project
ifndef VERSION
VERSION=0.9.0
endif

# user for the project
ifndef PROJECTUSER
PROJECTUSER=fossy
endif

# group for the project
ifndef PROJECTGROUP
PROJECTGROUP=$(PROJECTUSER)
endif

#####################################################################
# Install paths
#####################################################################
# pseudoroot for packaging purposes
ifndef DESTDIR
DESTDIR=
endif

# base of the program data tree
ifndef PREFIX
PREFIX=/usr/local
endif

# executable programs that users run
ifndef BINDIR
BINDIR=$(PREFIX)/bin
endif

# executable programs that sysadmins run
ifndef SBINDIR
SBINDIR=$(PREFIX)/sbin
endif

# config files
SYSCONFDIR=$(PREFIX)/etc

# init script root dir
INITDIR=/etc

# object code libraries
ifndef LIBDIR
LIBDIR=$(PREFIX)/lib
endif

# header files
ifndef INCLUDEDIR
INCLUDEDIR=$(PREFIX)/include
endif

# executables/libraries that only our project uses
ifndef LIBEXECDIR
LIBEXECDIR=$(PREFIX)/lib/$(PROJECT)
endif

# non-arch-specific data
ifndef DATAROOTDIR
DATAROOTDIR=$(PREFIX)/share
endif

# non-arch-dependent program data
ifndef DATADIR
DATADIR=$(DATAROOTDIR)/$(PROJECT)
endif

# local state
ifndef LOCALSTATEDIR
LOCALSTATEDIR=/var/local
endif

# project local state
ifndef PROJECTSTATEDIR
PROJECTSTATEDIR=$(LOCALSTATEDIR)/lib/$(PROJECT)
endif

# man pages
ifndef MANDIR
MANDIR=$(DATAROOTDIR)/man
endif

# Man pages in *roff format, man 1
ifndef MAN1DIR
MAN1DIR=$(MANDIR)/man1
endif

# project documentation
ifndef DOCDIR
DOCDIR=$(DATAROOTDIR)/doc/$(PROJECT)
endif

# webroot
ifndef WEBDIR
WEBDIR=$(DATADIR)/www
endif

# php root
ifndef PHPDIR
PHPDIR=$(DATADIR)/php
endif

#####################################################################
# Agent install paths
#####################################################################
# arch-specific agent subdirs
ifndef AGENTDIR
AGENTDIR=$(LIBEXECDIR)/agents
endif

# non-arch-specific agent subdirs
ifndef AGENTDATADIR
AGENTDATADIR=$(DATADIR)/agents
endif

# agent runtime data
ifndef AGENTSTATEDIR
AGENTSTATEDIR=$(PROJECTSTATEDIR)/agents
endif

# agent delivered check scripts, potentially arch specific and we
#   don't bother to differentiate
ifndef AGENTCHECKDDIR
AGENTCHECKDDIR=$(LIBEXECDIR)/check.d
endif

# agent delivered tests, potentially arch specific and we
#   don't bother to differentiate
ifndef AGENTTESTDDIR
AGENTTESTDDIR=$(LIBEXECDIR)/test.d
endif

#####################################################################
# Build variables
#####################################################################
SHELL = /bin/sh
CC=gcc
INSTALL = /usr/bin/install -D
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = ${INSTALL} -m 644

# if this ends up running in a non svn dir, like for example someone
# doing a build from a release tarball, the result returned is "exported"
# meaning the tree was exported from svn rather than a working copy,
# this is good. We also catch if they don't have svn.
SVN_REV:=$(shell svnversion -n . 2>&1 || echo "exported")

# these are the default cflags, recommended but not fully _required_
# if a user sets CFLAGS they get what they set it to and lose any they
# didn't include, which is the expected behavior
#CFLAGS=-O2 -Wall
CFLAGS=-g -O2 -Wall

# these are the required flags we don't want to go away if the user sets
# CFLAGS. note we _post_fix the existing CFLAGS in case the user wants to
# override stuff (GCS 7.2.3)
ALL_CFLAGS=-DSVN_REV="\"$(VERSION), $(SVN_REV)\"" $(CFLAGS)

# some variables to make using libfossrepo and libfossdb easier
# $TOP is set in each Makefile in order to make these work
DBPATH=$(TOP)/devel/libfossdb
DB=$(DBPATH)/libfossdb.a
REPOPATH=$(TOP)/devel/libfossrepo
REPO=$(REPOPATH)/libfossrepo.a

# for use when only generating objects and not linking
CFLAGS_DBO=-I$(DBPATH) -L$(DBPATH)
CFLAGS_REPOO=-I$(REPOPATH) -L$(REPOPATH)

# for use when linking too
CFLAGS_DB=-I$(DBPATH) -L$(DBPATH) -lfossdb
CFLAGS_REPO=-I$(REPOPATH) -L$(REPOPATH) -lfossrepo

# where the php iPATHFILE include file lives
iPATHFILE=$(TOP)/ui/pathinclude.h.php
