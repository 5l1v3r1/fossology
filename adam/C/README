This is the beginnings of a C version of the sentence_based_classification algorithm. Currently the stemmer and tokenizer is working. The sentence trainer and parser are almost completed.

Dependencies:
	libstemmer from http://snowball.tartarus.org/download.php
	libmaxent from http://homepages.inf.ed.ac.uk/lzhang10/maxent_toolkit.html

TODO:
    * Currently the access time of the list is very poor. Even on a small file it takes seconds to create a full similarity matrix. Removing the sglib 
hould fix this.
    * Bring in the scoring functions from the python code.
    * Enable leaders. For testing we have left this out.

Applications:
First you want to bruild the sentence model.  Then label_sentences can create more training data for the sentence model. database can then be used to create a text frequency representation of the reference licenses.

train_sent_model:
	This application takes a set of files as input. Each file should have its sentences wrapped with <SENTENCE>...</SENTENCE> tags. The application outputs a model file called SentenceModel.dat. This model file can be used to label sentence breaks in unlabeled files.

   Usage: ./train_sent_model [options]
      Creates a MaxEnt model for locating sentence breaks.
      -f path ::  Read the paths of the training files from a file.
      -o path ::  Save MaxEnt model at the specified path.
      Defaults to './maxent.model'.

label_sentences:
	This application uses an existing SentenceModel.dat model file to automatically 
    label the sentence breaks in a file. The only argument is a single file to be labelled.
  
    Usage: ./label_sentences [options] file
        This application uses an existing MaxEnt model file to automatically label the sentence breaks in a file. The only arguments are the model file and a single file to be labelled. The labeled file will be output to stdout.
            -m model ::  MaxEnt model to use for labeling.		   

    Build the model by:
      This writes a .dat file which contains the maxent model.
  
    eg.    find ../../Training/Sentences/*.sent > mexent_training.txt
	   ./train_sent_model -f maxent_training.txt -o maxent_model.dat
      
    Run:  ./label_sentences -m modelfile {filename}
    output goes stdout

   label_senetences uses a maxent model to automatically label a file with <SENTENCE></SENTENCE> tags.
   After this, you should manually check the file and adjust tags as needed.  At least you might want
   to do this until you have confidence that the model doesn't need tweaking.

database:
	database uses a maxent model to parse sentence out of set of license files. These sentences are then used to create text frequency vector which are stored in a model file for later use.

	Usage: ./database [options]
	   Creates a sentence model for classifying licenses.
	   -f path ::  Read the paths of the training files from a file.
	   -m path ::  Path to the MaxEnt sentence ending model.
	   -o path ::  Save sentence model at the specified path.
	
	Example:
		find ../../Training/Sentences/*.sent > mexent_training.txt
		./train_sent_model -f maxent_training.txt -o maxent_model.dat
		make training.txt
		./database -f training.txt -m maxent_model.dat -o database.dat
        # run the annalysis on a file.
        ./f1 file1 file2 ... fileN

# vim: ts=4 sts=4 et
